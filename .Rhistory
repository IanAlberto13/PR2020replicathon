##Busca los datos en el computador##
datos_status_estudiantes=read.csv("status_estudiantes")
source('~/.active-rstudio-document')
setwd("~/Desktop/data-shell")
setwd("~/")
.
library("ggplot2")
install.packages(“ggplot2”)
install.packages(“gapminder”)
install.packages("ggplot2")
library(ggplot2)
install.packages("gapminder")
library(gapminder)
##Import Data##
gapminder=gapminder
head(gapminder)
##Graphing##
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point()
##Graphing##
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, colour=continent)) +
geom_point()
##Graphing##
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, colour=continent)) +
geom_point() +
scale_x_log10()
##Graphing##
ggplot(gapminder, aes(x=year, y=lifeExp, colour=continent)) +
geom_point() +
scale_x_log10()
##Graphing##
ggplot(gapminder, aes(x=year, y=lifeExp, colour=continent)) +
geom_point()
##Graphing##
ggplot(gapminder, aes(x=year[1950,1980], y=lifeExp, colour=continent)) +
geom_point()
##Graphing##
ggplot(gapminder, aes(x=year, y=lifeExp, colour=continent)) +
geom_point()
##Graphing##
ggplot(gapminder, aes(x=year, y=lifeExp, colour=continent)) +
geom_bar()
##Graphing##
ggplot(gapminder, aes(x=year, y=lifeExp)) +
geom_bar()
##Graphing##
ggplot(gapminder, aes(x=year, y=lifeExp, colour=continent)) +
geom_point()
geom_line()
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent, by=country_codes))+
geom_line()
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent, by=country))+
geom_line()
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent, by=country))+
geom_line()+
geom_point(aes(color="black"))
geom_point((color="black")
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent, by=country))+
geom_line()+
geom_point(color="black")
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent, by=country))+
geom_line()+
geom_point(color="black")
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent, by=country))+
geom_point(color="black")+
geom_line()
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent, by=country))+
geom_line()+
geom_point(color="black")
5=2
2=5
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5) + scale_x_log10()
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5) + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, layer(color="red")) + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, layer(colour="blue")) + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, layer()) + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.5) + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.75) + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.75, colour="red") + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.75, colour=continent, shape="square") + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.75, by=continet, shape="square") + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.75, by=continet, shape="square") + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.75, by=continent, shape="square") + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp))+
geom_point(alpha=0.5, size=0.75,shape="square") + scale_x_log10() +
geom_smooth(method="lm")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, colour=continent))+
geom_point(alpha=0.5, size=0.75,shape="square") + scale_x_log10() +
geom_smooth(method="lm")
##Multi panel figures##
Africa=gapminder[gapminder$continent=="Africa",]
ggplot(Africa, aes(x=year, y=lifeExp))+
geom_line()+
facet_wrap(~country)
ggplot(Africa, aes(x=year, y=lifeExp))+
geom_line()+
facet_wrap(~country) + theme(axis.text.x=element_text(angle=45))
labs(title="Figure 1. Life Expectancy in Africa across years", x="Years", y="Life Expectancy")
labs(title="Figure 1. Life Expectancy in Africa across years", x="Years", y="Life Expectancy")
ggplot(Africa, aes(x=year, y=lifeExp))+
theme(axis.text.x=element_text(angle=90, hjust=1, size=7), axis.text.y=element_text(size=7)
ggplot(Africa, aes(x=year, y=lifeExp))+
geom_line()+
facet_wrap(~country)+
theme(axis.text.x=element_text(angle=90, hjust=1, size=7), axis.text.y=element_text(size=7))+
labs(title= "Figure 1. Life Expectancy in Africa across years", x="Years", y="Life Expectancy")
View(gapminder)
##Installing Packages##
install.packages("behavr")
install.packages("ggetho")
install.packages("damr")
install.packages("scopr")
install.packages("sleepr")
install.packages("zeitgebr")
##Installing Packages from CRAN##
install.packages("behavr")
library(behavr)
install.packages("ggetho")
library(ggetho)
install.packages("damr")
library(damr)
install.packages("scopr")
library(scopr)
install.packages("sleepr")
library(sleepr)
install.packages("zeitgebr")
library(zeitgebr)
##Practicing with Toy Data##
metadata = data.table(id =paste("toy_experiment", 1:10, sep = "|"),
sex = rep(c("male", "female"), each = 5),
condition = c("A", "B"))
metadata
dt = toy_dam_data(metadata, duration = days(1))
dt
summary(dt)
summary(dt, detailed = TRUE)
dt[, very_active := activity >= 2]
dt[, very_active := NULL]
dt = dt[t>hours(1)]
dt
dt = dt[t>=hours(1)]
dt
dt[, treatment := paste(sex, condition, sep="|"), meta=TRUE]
dt[meta=T]
dt[meta=TRUE]
#xmv()
dt[, t := ifelse(xmv(condition) == 'A', t+10, t)]
dt
behavr(help)
dt=dt[xmv(sex) == 'female']
dt=dt[xmv(sex) == 'female']
dt[meta=TRUE]
#xmv()
dt[, t := ifelse(xmv(condition) == 'A', t+10, t)]
swd(Users/IanAlberto/Desktop/PR2020replicathon-master)
setwd('~/Desktop/PR2020replicathon')
raw=readRDS('data/rawPharmacoData.rds')
raw
install.packages("tidyverse")
install.packages(c("dplyr", "tidyverse"))
install.packages("tidyverse")
library(tidyverse)
pharmacoData <- readRDS(file.path("..", "data", "rawPharmacoData.rds"))
str(pharmacoData)
str(raw)
summarizedData <- readRDS(file.path("..", "data", "summarizedPharmacoData.rds"))
str(summarizedData)
View(raw)
nilotinibData <- filter(pharmacoData, drug == "Nilotinib")
head(nilotinibData)
cl639vData <- filter(pharmacoData, cellLine == "639-V")
head(cl639vData)
n6Data <- filter(pharmacoData,
drug == "Nilotinib",
cellLine == "639-V")
head(n6Data)
cldData <- distinct(pharmacoData, cellLine, drug)
head(cldData)
dim(cldData)
cldData <- pharmacoData %>% distinct(, cellLine, drug)
cldData <- pharmacoData %>% distinct(cellLine, drug)
head(cldData)
dim(cldData)
subdat <- select(pharmacoData, cellLine, drug)
head(subdat)
subdat <- select(pharmacoData, cellLine, drug)
head(subdat)
pharmacoData %>%
dplyr::mutate(logConcentration = log2(concentration)) %>%
head()
pharmacoData <- pharmacoData %>%
dplyr::mutate(logConcentration = log2(concentration))
head(pharmacoData)
pharmacoData %>%
dplyr::mutate(concentration = log2(concentration)) %>%
head()
pharmacoData %>%
summarize(minViability = min(viability),
maxViability = max(viability),
avgViability = mean(viability))
count(pharmacoData, study)
count(pharmacoData, cellLine)
count(pharmacoData)
count(pharmacoData, cellLine, Viability)
count(pharmacoData, cellLine, viability)
count(pharmacoData, cellLine)
pharmacoData %>%
group_by(study) %>%
summarize(minViability = min(viability),
maxViability = max(viability),
avgViability = mean(viability))
pharmacoData %>%
group_by(cellLine, drug, study) %>%
mutate(viability = viability / max(viability) * 100) %>%
ungroup()
pharmacoData %>%
group_by(cellLine, drug, study) %>%
mutate(viability = viability / max(viability) * 100) %>%
ungroup()
head(pharmacoData)
head(summarizedData)
fullData <- full_join(pharmacoData, summarizedData, by = c("cellLine", "drug"))
head(fullData)
subdat <- pharmacoData %>%
filter(study == "CCLE",
drug %in% c("lapatinib", "paclitaxel")) %>%
select(cellLine, drug, concentration, viability)
head(subdat)
subdat <- pharmacoData %>%
filter(study == "CCLE",
drug %in% c("lapatinib", "paclitaxel")) %>%
select(cellLine, drug, concentration, viability)
head(subdat)
subdat <- pharmacoData %>%
filter(study == "CCLE",
drug %in% c("lapatinib", "paclitaxel")) %>%
select(cellLine, drug, concentration, viability)
head(subdat)
subdat <- pharmacoData %>%
filter(study == "CCLE",
drug %in% c("lapatinib", "paclitaxel")) %>%
select(cellLine, drug, concentration, viability)
head(subdat)
subdat_wide <- pivot_wider(subdat,
names_from = drug,
values_from = viability)
head(subdat_wide)
head(summarizedData)
summarizedDataLong <- pivot_longer(summarizedData,
c(ic50_CCLE, auc_CCLE, ic50_GDSC, auc_GDSC),
names_to = "metric",
values_to = "value")
head(summarizedDataLong)
## alternatively
summarizedDataLong <- pivot_longer(summarizedData,
-c(cellLine, drug),
names_to = "metric",
values_to = "value")
head(summarizedDataLong)
summarizedDataUndo <- pivot_wider(summarizedDataLong,
names_from = metric,
values_from = value)
head(summarizedDataUndo)
library(survival)
library(survival)
str(pharmacoData)
head(pharmacoData)
View(pharmacoData)
class(pharmacoData)
head(pharmacoData$drug)
pharmacoData$drug[5000]
install.packages("swirl")
library(swirl)
swirl()
knitr::opts_chunk$set(echo = TRUE)
raw$cellLine
raw=readRDS(data/rawPharmacoData.rds)
setwd("~/Desktop/PR2020replicathon")
raw=readRDS(data/rawPharmacoData.rds)
raw=readRDS(data/rawPharmacoData.rds)
raw=readRDS(data/rawPharmacoData.rds)
raw=readRDS(~/Desktop/PR2020replicathon/data/rawPharmacoData.rds)
raw=readRDS(~/Desktop/PR2020replicathon/data/rawPharmacoData.rds)
raw <- readRDS(file.path("..", "data", "rawPharmacoData.rds"))
raw <- readRDS('~/Desktop/PR2020replicathon/data/rawPharmacoData.rds')
raw$cellLine
library(tidyverse)
gp1 <- pharmacoData %>%
ggplot(aes(x = concentration, y = viability))
pharmacoData <- readRDS(file.path("..", "data", "rawPharmacoData.rds"))
str(pharmacoData)
gp1 <- pharmacoData %>%
ggplot(aes(x = concentration, y = viability))
gp2 <- ggplot(pharmacoData,
aes(x = concentration, y = viability))
gp1 <- pharmacoData %>%
ggplot(aes(x = concentration, y = viability))
gp2 <- ggplot(pharmacoData,
aes(x = concentration, y = viability))
library(tidyverse)
raw <- readRDS('~/Desktop/PR2020replicathon/data/rawPharmacoData.rds')
summarize(raw, cellLine)
raw <- readRDS('~/Desktop/PR2020replicathon/data/rawPharmacoData.rds')
pharmacoData <- readRDS(file.path("..", "data", "rawPharmacoData.rds"))
raw
